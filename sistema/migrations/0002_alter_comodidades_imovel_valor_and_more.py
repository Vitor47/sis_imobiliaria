# Generated by Django 4.0.5 on 2022-06-27 02:59

import django.core.validators
from django.db import migrations, models
import sistema.validators


class Migration(migrations.Migration):

    dependencies = [
        ('sistema', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='comodidades_imovel',
            name='VALOR',
            field=models.CharField(max_length=255, validators=[django.core.validators.RegexValidator('^[a-zA-Z. ]', 'O campo deve conter apenas letras')], verbose_name='Digite a comodidade do imovel:'),
        ),
        migrations.AlterField(
            model_name='detalhes_imovel',
            name='AREA_TOTAL',
            field=models.IntegerField(validators=[django.core.validators.RegexValidator('^[0,1,2,3,4,5,6,7,8,9]', 'O campo deve conter apenas numeros')], verbose_name='Metros quadrados da área total:'),
        ),
        migrations.AlterField(
            model_name='detalhes_imovel',
            name='AREA_UTIL',
            field=models.IntegerField(validators=[django.core.validators.RegexValidator('^[0,1,2,3,4,5,6,7,8,9]', 'O campo deve conter apenas numeros')], verbose_name='Metros quadrados da área util:'),
        ),
        migrations.AlterField(
            model_name='detalhes_imovel',
            name='NOME',
            field=models.CharField(max_length=200, validators=[django.core.validators.RegexValidator('^[a-zA-Z. ]', 'O campo deve conter apenas letras')], verbose_name='Nome do detalhe'),
        ),
        migrations.AlterField(
            model_name='endereco',
            name='BAIRRO',
            field=models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z. ]', 'O campo deve conter apenas letras')], verbose_name='Bairro:'),
        ),
        migrations.AlterField(
            model_name='endereco',
            name='CEP',
            field=models.CharField(max_length=8, validators=[sistema.validators.validate_cep], verbose_name='Cep:'),
        ),
        migrations.AlterField(
            model_name='endereco',
            name='CIDADE',
            field=models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z. ]', 'O campo deve conter apenas letras')], verbose_name='Cidade:'),
        ),
        migrations.AlterField(
            model_name='endereco',
            name='COMPLEMENTO',
            field=models.CharField(max_length=200, validators=[django.core.validators.RegexValidator('^[a-zA-Z. ]', 'O campo deve conter apenas letras')], verbose_name='Complemento'),
        ),
        migrations.AlterField(
            model_name='endereco',
            name='ESTADO',
            field=models.CharField(choices=[('RS', 'Rio Grande do Sul')], max_length=2, validators=[django.core.validators.RegexValidator('^[a-zA-Z. ]', 'O campo deve conter apenas letras')], verbose_name='Estado:'),
        ),
        migrations.AlterField(
            model_name='endereco',
            name='NUMERO',
            field=models.IntegerField(validators=[django.core.validators.RegexValidator('^[0,1,2,3,4,5,6,7,8,9]', 'O campo deve conter apenas numeros')], verbose_name='Numero da casa:'),
        ),
        migrations.AlterField(
            model_name='endereco',
            name='RUA',
            field=models.CharField(max_length=200, validators=[django.core.validators.RegexValidator('^[a-zA-Z. ]', 'O campo deve conter apenas letras')], verbose_name='Rua:'),
        ),
        migrations.AlterField(
            model_name='imovel',
            name='GARAGEM',
            field=models.IntegerField(validators=[django.core.validators.RegexValidator('^[0,1,2,3,4,5,6,7,8,9]', 'O campo deve conter apenas numeros')], verbose_name='Quantidade de espaço na garagem:'),
        ),
        migrations.AlterField(
            model_name='imovel',
            name='NOME_IMOVEL',
            field=models.CharField(max_length=255, validators=[django.core.validators.RegexValidator('^[a-zA-Z. ]', 'O campo deve conter apenas letras')], verbose_name='Nome do imóvel:'),
        ),
        migrations.AlterField(
            model_name='imovel',
            name='NUMERO_BANHEIROS',
            field=models.IntegerField(validators=[django.core.validators.RegexValidator('^[0,1,2,3,4,5,6,7,8,9]', 'O campo deve conter apenas numeros')], verbose_name='Numero de banheiros:'),
        ),
        migrations.AlterField(
            model_name='imovel',
            name='NUMERO_QUARTOS',
            field=models.IntegerField(validators=[django.core.validators.RegexValidator('^[0,1,2,3,4,5,6,7,8,9]', 'O campo deve conter apenas numeros')], verbose_name='Numero de quartos:'),
        ),
        migrations.AlterField(
            model_name='imovel',
            name='SLUG',
            field=models.SlugField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z. ]', 'O campo deve conter apenas letras')], verbose_name='Slug:'),
        ),
        migrations.AlterField(
            model_name='inquilino',
            name='CPF',
            field=models.CharField(max_length=11, validators=[sistema.validators.validate_cpf], verbose_name='CPF:'),
        ),
        migrations.AlterField(
            model_name='inquilino',
            name='NOME',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[a-zA-Z. ]', 'O campo deve conter apenas letras')], verbose_name='Nome:'),
        ),
        migrations.AlterField(
            model_name='inquilino',
            name='PROFISSAO',
            field=models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z. ]', 'O campo deve conter apenas letras')], verbose_name='Profissão:'),
        ),
        migrations.AlterField(
            model_name='inquilino',
            name='RG',
            field=models.CharField(max_length=10, validators=[sistema.validators.validate_rg], verbose_name='RG:'),
        ),
        migrations.AlterField(
            model_name='inquilino',
            name='TELEFONE',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0,1,2,3,4,5,6,7,8,9]', 'O campo deve conter apenas numeros')], verbose_name='Telefone:'),
        ),
    ]
